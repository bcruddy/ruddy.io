<section class="container-fluid margin40" id="profile">
    <div class="container">
        <div class="row">
            <div class="col-md-10 col-md-offset-1 col-sm-12">
                <h3 class="text-center">About</h3>
                <p>
                    I like to build things, learn things, and find better ways to build and learn. I've been creating software professionally for six years - everything from consuming simple SaaS a la AWS, Google Cloud, and IBM Bluemix to manipulating individial pixel values in the HTML5 canvas.
                </p>
                <p>
                    With a slight preferance for the web front end, I am a firm believer in making the data-driven decisions, whether or not they fit my own vision for a project. Measuring developer success is one of the hardest metrics on the planet to calculate and simplifying that is only one of the many benefits of not only allowing but <i>requiring</i> data to drive decisions.
                </p>
                <p>
                    I'm currently employed at IBM working on the <a href="https://ibm.com/marketplace" rel="nofollow" target="_blank"> marketplace</a> with a focus on discovery, navigation, and search. Current projects include the ibm.com search as well as several client side modules for providing and/or validating pricing data.
                </p>
            </div>
        </div>
    </div>
</section>

<section class="container-fluid margin40" id="skills">
    <div class="container">
        <h3 class="text-center">Skills</h3>
        <div class="row">
            <div class="col-md-5 col-md-offset-1 col-sm-6">
                <h4>Javascript Programming</h4>
                <p>
                    Recognizing the paradigm shift towards the browser-as-the-OS mentality, javascript is one of the most important tools I use on a daily basis. From task automation and scripting on my local machine to standing up APIs and proxies with express.js to reacting to user actions in the browser, javascript is here to stay.
                </p>
            </div>
            <div class="col-md-5 col-sm-6">
                <h4>.NET Programming</h4>
                <p>
                    Primarily web-based, the .NET framework is my go to when building large, scalable applications. The combination of static typing and entity framework's code-first migrations make dotnet the easy (although very opinionated) choice when staring down a problem with a monolithic soltuion.
                </p>
            </div>
        </div>
    </div>
</section>

<section class="container-fluid margin40" id="technical">
    <div class="container">
        <div class="row">
            <div class="col-md-10 col-md-offset-1 col-sm-12">
                <h3 class="text-center">Technical</h3>
                <div class="row">
                    <div class="col-md-3 col-xs-6">
                        <ul class="list-unstyled">
                            <li>Nodejs</li>
                            <li>Express</li>
                            <li>C# ASP.NET</li>
                            <li>ASP.NET MVC / WebAPI</li>
                            <li>Entity Framework</li>
                        </ul>
                    </div>
                    <div class="col-md-3 col-xs-6">
                        <ul class="list-unstyled">
                            <li>MongoDB / CouchDB</li>
                            <li>PostgresSQL / MySQL / MSSQL</li>
                            <li>Redis / Memcached</li>
                            <li>Apache / nginx / IIS</li>
                        </ul>
                    </div>
                    <div class="col-md-3 col-xs-6">
                        <ul class="list-unstyled">
                            <li>Javascript (ES5 / ES6+ / TypeScript)</li>
                            <li>Webpack / Gulp</li>
                            <li>React / JS Templating</li>
                            <li>SCSS / CSS3 / HTML5</li>
                        </ul>
                    </div>
                    <div class="col-md-3 col-xs-6">
                        <ul class="list-unstyled">
                            <li>Ubuntu, RHEL Linux</li>
                            <li>AWS / Google Cloud Platform / IBM Bluemix</li>
                            <li>Git</li>
                            <li>TravisCI</li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

<section class="container-fluid margin40" id="employment">
    <div class="container">
        <h3 class="text-center">Employment</h3>
        <div class="row">
            <div class="col-md-12">
                <h3>IBM<small><em>November 2016 - Current</em></small></h3>
                <h4>Software Engineer, Digital Marketplace Engineering</h4>
                <p>
                    With a focus on offering discovery, nagivation, and search, my role within Digital Marketplace Engineering is predominantly on the front-end. Turning beautiful, functional designs into interactive HTML, CSS, and javascript using reactjs, expressjs, and nodejs is something I'm passionate about and able to contribute to every day.
                </p>
                <p>
                    <strong>Current projects include:</strong>
                    <ul>
                        <li>
                            Search experience - overhaul and merge marketplace and ibm.com proper search functionality to create a powerful unified experience across IBM digital platforms.
                        <li>
                            Static components - javascript files served over CDN, the price-check and pricing-table components leverage the marketplace REST API to pull in realtime data from commerce to both guarantee our data is up to date and structured in a consistent, reuseable format.
                        </li>
                        <li>
                            Marketplace Landing Page - lead a massive overhaul of the us-en marketplace landing page resulting in a >20% drop in our bounce rate and a >17% increase in user engagement.
                        </li>
                    </ul>
                </p>
            </div>
        </div>
        <div class="row">
            <div class="col-md-12">
                <h3>Photofy<small><em>September 2014 - Octover 2016</em></small></h3>
                <h4>Full Stack Developer</h4>
                <p>
                    My role expanded to include complete autonomy over the Photofy Designer web app, photo stream widget, marketing website, admin backend, user portal, and newsletter infrastructure.
                </p>
                <p>
                    While acting as the lead maintainer on the previously listed projects, I was still able to make regular contributions to the API platform with a primary focus on performance while also deploying safeguards to protect uptime. In effort to off load both cost and the burden of scalability, I lead internal the "serverless movement" to leverage AWS's lambda for image and thumbnail processing.
                </p>
            </div>
        </div>
        <div class="row">
            <div class="col-md-12">
                <h3>Ruddy Labs<small><em>August 2012 - Current</em></small></h3>
                <h4>Founder, Developer</h4>
                <p>
                    What started as building a simple HTML/CSS website for a friend's band while taking an intro to CS class in college
                    has since grown into a recurring project stream. Associated projects are all run on AWS and are built with either C#/.NET MVC
                    or nodejs/Express. Node projects run on Ubuntu Linux behind Apache and C#/.NET MVC projects run on Windows Server behind IIS.
                </p>
            </div>
        </div>
        <div class="row">
            <div class="col-md-12">
                <h3>TennisConnect<small><em>December 2013 - Current</em></small></h3>
                <h4>Front End Developer</h4>
                <p>
                    Working directly with clients to spec out and build websites within a home-grown CMS or to integrate
                    existing websites with TennisConnect's court reservation and calendar systems.
                </p>
                <p>
                    With the release of the mobile application PlayTennisConnect (Summer '16) my responsibilities expanded to include building, deploying, and maintaining the marketing website as well as customer-specific in-app webviews. Building and maintaining customer-specific webviews also requires direct customer interaction.
                </p>
                <p>
                    This role became a part-time contract role in September 2014.
                </p>
            </div>
        </div>
    </div>
</section>

<section class="container-fluid margin40" id="projects">
    <div class="container">
        <div class="row">
            <div class="col-md-12">
            <h3 class="text-center">Other Projects</h3>
                <h3>Goat Attack<small><em>April 2015 - Current</em></small></h3>
                <p>
                    <a href="https://goatattack.com" target="_blank">Goat Attack</a> is a web-based prank application for spamming your friends'
                    phones with a random selection of goat pictures and goat related puns. It's just as silly as it sounds.
                    Goat Attack is a collection of .NET projects relying on Twilio's API to send MMS messages and Braintree's API
                    to process payments. This project is running behind IIS on Windows Server on Google Cloud Platform.
                </p>
            </div>
        </div>
        <div class="row">
            <div class="col-md-12">
                <h3>Gram Like Cam<small><em>August 2016 - Current</em></small></h3>
                <p>
                    <a href="https://gramlikecam.com" target="_blank">Gram Like Cam</a> is a web-based nodejs/Express application for translating English
                    into whatever hieroglyphics Cam Newton uses in his <a href="https://www.instagram.com/cameron1newton/" target="_blank" rel="nofollow">Instagram captions</a>.
                    This was initially inspired to translate Cam's captions from the symbols he uses into plain English,
                    but this way was more fun. This project is <a href="https://github.com/bcruddy/gramlikecam" target="_blank">open source</a> and running
                    behind an Apache reverse proxy on an Ubuntu Linux server on AWS secured with Let's Encrypt.
                </p>
            </div>
        </div>
        <div class="row">
            <div class="col-md-12">
                <h3>twitter-bot<small><em>July 2015 - Current</em></small></h3>
                <p>
                    <a href="https://github.com/bcruddy/twitter-bot" target="_blank">twitter-bot</a> is a highly scalable bot for automating
                    twitter accounts. What started as an experiment with nodejs to tweet funny content from reddit has become a tool for maintaining
                    followers on several twitter accounts including the original <a href="https://twitter.com/badatmyjob" target="_blank">@badatmyjob</a>
                    account as well as the <a href="https://twitter.com/oakcityshuttle" target="_blank">@oakcityshuttle</a> account and many more from a single
                    small Ubuntu AWS instance, running as a node script in a cronjob. This project is <a href="https://github.com/bcruddy/twitter-bot" target="_blank">open source</a>.
                </p>
            </div>
        </div>
        <div class="row">
            <div class="col-md-12">
                <h3>font-inject<small><em>March 2016 - Current</em></small></h3>
                <p>
                    <a href="https://github.com/bcruddy/font-inject.js" target="_blank">font-inject</a> is a typescript library developed with the Photofy Designer web app in mind.
                    Loading hundreds of fonts via CSS imports and keeping everything updated was becoming cumbersome as the designers were constantly adding fonts to the library.
                    I also didn't want to request all of them on page load and slow down load times and in turn affect performance relative to the user.
                    This is my solution - it injects the fonts as "native" CSS without the use of an external stylesheet,
                    making all fonts available on demand. This project is <a href="https://github.com/bcruddy/font-inject.js" target="_blank">open source</a>.
                </p>
            </div>
        </div>
    </div>
</section>
