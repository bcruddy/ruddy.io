<section class="container-fluid margin40" id="profile">
    <div class="container">
        <div class="row">
            <div class="col-md-10 col-md-offset-1 col-sm-12">
                <h3 class="text-center">About</h3>
                <p>
                    I like to build things and learn new technologies.
                    I've been creating software for 4 years - from simple websites to SaaS development consuming cloud based services like Amazon Web Services and Google Cloud.
                    Most of my time is spent with html/css/javascript all the way back to MSSQL/MySQL databases.
                </p>
                <p>
                    I love creating software.
                    Seeing the business application of that software is leading me down a path where I see my code providing concrete data on which business decisions are based, and I'm excited about that.
                    I'm passionate about automating the systems I build and maintain to reduce human error.
                    It's becoming a larger and larger part of my day to day.
                </p>
                <p>
                    I'm currently employed at Photofy, where we're working to change the way the world creates and shares photos.
                    Photofy is an API driven mobile application supporting Android, iOS, and web-based platforms serving tens of thousands of users daily.
                </p>
            </div>
        </div>
    </div>
</section>

<section class="container-fluid margin40" id="skills">
    <div class="container">
        <h3 class="text-center">Skills</h3>
        <div class="row">
            <div class="col-md-5 col-md-offset-1 col-sm-6">
                <h4>Javascript Programming</h4>
                <p>
                    Ideal for building products and prototypes from front-ends to APIs to automation and build tools, Javascript
                    is an essential tool in my day to day programming.
                </p>
            </div>
            <div class="col-md-5 col-sm-6">
                <h4>.NET Programming</h4>
                <p>
                    Primarily web-based, the .NET framework is my go to when building large, scalable applications that
                    rely on static typing for maximum maintainability.
                </p>
            </div>
        </div>
    </div>
</section>

<section class="container-fluid margin40" id="technical">
    <div class="container">
        <div class="row">
            <div class="col-md-10 col-md-offset-1 col-sm-12">
                <h3 class="text-center">Technical</h3>
                <div class="row">
                    <div class="col-md-3 col-xs-6">
                        <ul class="list-unstyled">
                            <li>C# ASP.NET</li>
                            <li>ASP.NET WebAPI</li>
                            <li>ASP.NET MVC</li>
                            <li>Entity Framework</li>
                            <li>NodeJS</li>
                            <li>Express.js</li>
                            <li>PHP</li>
                            <li>Laravel Framework</li>
                        </ul>
                    </div>
                    <div class="col-md-3 col-xs-6">
                        <ul class="list-unstyled">
                            <li>MySQL</li>
                            <li>MS SQL</li>
                            <li>MongoDB</li>
                            <li>Memcached</li>
                            <li>Redis</li>
                            <li>Apache</li>
                            <li>Nginx</li>
                            <li>IIS</li>
                        </ul>
                    </div>
                    <div class="col-md-3 col-xs-6">
                        <ul class="list-unstyled">
                            <li>Javascript (ES5 / ES6+)</li>
                            <li>Typescript</li>
                            <li>Webpack / Grunt / Gulp</li>
                            <li>angular.js</li>
                            <li>Handlebars.js / Mustache.js</li>
                            <li>jQuery</li>
                            <li>HTML / HTML5</li>
                            <li>CSS / CSS3 / SASS</li>
                            <li>AJAX / JSON / XML</li>
                            <li>Twitter-Bootstrap</li>
                        </ul>
                    </div>
                    <div class="col-md-3 col-xs-6">
                        <ul class="list-unstyled">
                            <li>Ubuntu Linux</li>
                            <li>Red Hat Enterprise Linux</li>
                            <li>OS X / MacOS</li>
                            <li>Windows / Windows Server</li>
                            <li>Amazon Web Services</li>
                            <li>RESTful Webservices</li>
                            <li>Object Oriented Programming</li>
                            <li>Bash</li>
                            <li>Git</li>
                            <li>LetsEncrypt</li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

<section class="container-fluid margin40" id="employment">
    <div class="container">
        <h3 class="text-center">Employment</h3>
        <div class="row">
            <div class="col-md-12">
                <h3>Photofy<small><em>September 2014 - Current</em></small></h3>
                <h4>Full Stack Developer</h4>
                <p>
                    My role at Photofy has expanded greatly over the last two years and now encompasses complete autonomy
                    over the Photofy Designer web app, Photofy Stream Widget, Photofy marketing website, and newsletter infrastructure as well as a primary role
                    building out and maintaining the Photofy User Portal and the internal admin project. These projects are running behind IIS on Windows Server on AWS
                    unless otherwise noted.
                </p>
                <p>
                    The Photofy Designer web app is the web-based implementation of Photofy. Consuming a RESTful API, the Designer
                    is a .NET MVC project used by thousands of individuals and brands each month. Built on a fabric.js foundation,
                    the Photofy Designer leverages the power of the HTML5 canvas to provide a fast, clean, and easy to use experience.
                </p>
                <p>
                    The Photofy Stream Widget is a 100% stateless, token-based tool built on NodeJS with Express. Allows users/brands to generate
                    iframe code or consume JSON data directly in order to display their Photofy stream. Also responsible for managing
                    the Red Hat Enterprise Linux server it runs on behind an Apache web server on AWS.
                </p>
                <p>
                    The newsletter platform is a Sendy implementation, built with PHP and MySQL running on Red Hat Enterprise Linux behind an Apache web server on AWS.
                    Responsible for server setup, deployment, maintenance and extending Sendy's functionality to integrate with our existing user base,
                    consisting of millions of accounts, all while keeping the two systems in sync.
                </p>
                <p>
                    The Photofy User Portal is where our business customers realize the true value of Photofy as a branding and social media
                    content creation and sharing platform. Greatly expanded features and functionality to include scheduled social media posts,
                    scheduled push notifications, sub-user management and permissions, in-app customization, and much more as well as a
                    ground up redesign at the end of 2015. Utilized AWS Lambda to process user-uploaded images with Amazon's hardware instead of ours
                    for scalability and increased site reliability.
                </p>
            </div>
        </div>
        <div class="row">
            <div class="col-md-12">
                <h3>Ruddy Labs<small><em>August 2012 - Current</em></small></h3>
                <h4>Founder, Developer</h4>
                <p>
                    What started as building a simple HTML/CSS website for a friend's band while taking an intro to CS class in college
                    has since grown into a recurring project stream. Associated projects are all run on AWS and are built with either C#/.NET
                    or NodeJS with Express. Node projects run on Ubuntu Linux behind Apache and C#/.NET projects run on Windows Server behind IIS.
                </p>
            </div>
        </div>
        <div class="row">
            <div class="col-md-12">
                <h3>TennisConnect<small><em>December 2013 - Current</em></small></h3>
                <h4>Front End Developer</h4>
                <p>
                    Working directly with clients to spec out and build websites within a home-grown CMS or to integrate
                    existing websites with TennisConnect's court reservation and calendar systems.
                </p>
                <p>
                    With the release of the mobile application PlayTennisConnect (Summer '16) my responsibilities expanded to include building, deploying, and maintaining the marketing website as well as customer-specific in-app webviews. Building and maintaining customer-specific webviews also requires direct customer interaction.
                </p>
                <p>
                    This role became a part-time contract role in September 2014.
                </p>
            </div>
        </div>
    </div>
</section>

<section class="container-fluid margin40" id="projects">
    <div class="container">
        <div class="row">
            <div class="col-md-12">
            <h3 class="text-center">Other Projects</h3>
                <h3>Goat Attack<small><em>April 2015 - Current</em></small></h3>
                <p>
                    <a href="https://goatattack.com" target="_blank">Goat Attack</a> is a web-based prank application for spamming your friends'
                    phones with a random selection of goat pictures and goat related puns. It's just as silly as it sounds.
                    Goat Attack is a collection of .NET projects relying on Twilio's API to process payments and Braintree's API
                    to send the MMS messages. This project is running behind IIS on Windows Server on Google Cloud Platform.
                </p>
            </div>
        </div>
        <div class="row">
            <div class="col-md-12">
                <h3>Gram Like Cam<small><em>August 2016 - Current</em></small></h3>
                <p>
                    <a href="https://gramlikecam.com" target="_blank">Gram Like Cam</a> is a web-based NodeJS / Express application for translating English
                    into whatever hieroglyphics Cam Newton uses in his <a href="https://www.instagram.com/cameron1newton/" target="_blank" rel="nofollow">Instagram captions</a>.
                    This was initially inspired to translate Cam's captions from the symbols he uses into plain English,
                    but this way was more fun. This project is <a href="https://github.com/bcruddy/gramlikecam" target="_blank">open source</a> and running
                    behind an Apache reverse proxy on an Ubuntu Linux server on AWS secured with Let's Encrypt.
                </p>
            </div>
        </div>
        <div class="row">
            <div class="col-md-12">
                <h3>twitter-bot<small><em>July 2015 - Current</em></small></h3>
                <p>
                    <a href="https://github.com/bcruddy/twitter-bot" target="_blank">twitter-bot</a> is a highly scalable bot for automating
                    twitter accounts. What started as an experiment with nodejs to tweet funny content from reddit has become a tool for maintaining
                    followers on several twitter accounts including the original <a href="https://twitter.com/badatmyjob" target="_blank">@badatmyjob</a>
                    account as well as the <a href="https://twitter.com/oakcityshuttle" target="_blank">@oakcityshuttle</a> account and many more from a single
                    small Ubuntu AWS instance, running as a NodeJS script in a cronjob. This project is <a href="https://github.com/bcruddy/twitter-bot" target="_blank">open source</a>.
                </p>
            </div>
        </div>
        <div class="row">
            <div class="col-md-12">
                <h3>font-inject<small><em>March 2016 - Current</em></small></h3>
                <p>
                    <a href="https://github.com/bcruddy/font-inject.js" target="_blank">font-inject</a> is a typescript library developed with the Photofy Designer web app in mind.
                    Loading hundreds of fonts via CSS imports and keeping everything updated was becoming cumbersome as the designers were constantly adding fonts to the library.
                    I also didn't want to request all of them on page load and slow down load times and in turn affect performance relative to the user.
                    This is my solution - it injects the fonts as "native" CSS without the use of an external stylesheet (one less request to make),
                    making all fonts available on demand. This project is <a href="https://github.com/bcruddy/font-inject.js" target="_blank">open source</a>.
                </p>
            </div>
        </div>
    </div>
</section>